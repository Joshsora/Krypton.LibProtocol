library chatroom {
    // A client in the chatroom
    declare client {
        uint16 connection_id;
        string name;
    }
    
    // A channel in the chatroom
    declare channel {
        uint16 id;
        string name;
        
        // active clients in the channel
        list<this::client> clients;
    }
    
    protocol ChatroomProtocol {
        Connect,
        ConnectResponse,
        SendMessage,
        BroadcastMessage
        
        // client -> server: requests a new connection to the chatroom
        packet Connect {
            string name;
        }
        
        // server -> client: client connection response
        packet ConnectResponse {
            bool successful;
            
            // only include the connection id and channel list if we were successful
            (successful == true) => {
                uint16 connection_id;
                
                // list of channels in the chatroom
                list<this::channel> channels;
            };
        }
        
        // client -> server: sent when client attempts to send a message in the chatroom
        packet SendMessage {
            client sender;
            uint16 channel_id;
            string content;
        }
        
        // server -> clients: sent whenever the server verifies a send message request
        packet BroadcastMessage {
            client sender;
            uint16 channel_id;
            string content;
            uint16 timestamp;
        }
    }
}