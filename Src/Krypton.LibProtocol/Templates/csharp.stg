init(root) ::= <<
<([root.TemplateName, "_template"])(root)>
>>

target_members(container) ::= <<
<container.Members: {m | <([m.TemplateName, "_template"])(m)>}; separator="\n">
>>

/**
    NAMESPACE DECLARATION
*/

namespace_template(namespace) ::= <<
namespace <namespace.Name>
{
    <target_members(namespace)>
}
>>

// groups
group_template(gobj) ::= <<
<gobj.Name>
>>

/**
    PROTOCOL DECLARATION
*/
protocol_template(protocol) ::= <<
public class <protocol.Name>
{
    <target_members(protocol)>
}
>>

// messages
message_template(message) ::= <<
>>

/**
    PACKET DECLARATION
*/
packet_template(packet) ::= <<
public class <packet.Name> <packet_parent_builder(packet)>
{
}
>>

// Parent builder
packet_parent_builder(packet) ::= <<
<packet.Members: {m | <m.Name>}; separator=",">
>>

/**
    TYPE DECLARATION
*/

typedecl_template(typedecl) ::= <<
<typedecl.Name>
>>

generic_typedecl_template(typedecl) ::= <<
<typedecl.Name>
>>

/**
    TYPE REFERENCING
*/

// Builtin types to their perspective class names
builtin_type ::= [
    "byte": "KryptonByte",
    "bool": "KryptonBool",
    "int8": "KryptonInt8",
    "uint8": "KryptonUInt8",
    "int16": "KryptonInt16",
    "uint16": "KryptonUInt16",
    "int32": "KryptonInt32",
    "uint32": "KryptonUInt32",
    "int64": "KryptonInt64",
    "uint64": "KryptonUInt64",
    "string": "KryptonString",
    "cstring": "KryptonCString",
    "buffer": "KryptonBuffer",
    "array": "KryptonArray"
]
